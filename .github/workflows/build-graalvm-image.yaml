name: build-graalvm-image
run-name: Build ${{ inputs.project_name }} GraalVM image (${{ inputs.version }})

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: Origin project name
        required: true
      version:
        description: The SHA of the git commit
        required: true
      bundle_s3_uri:
        description: The S3 URI (s3://{bucket}/{object_key}) fo the GraalVM bundle
        required: true

env:
  PUBLIC_REGISTRY: ghcr.io
  REPOSITORY: core0

jobs:
  prepare:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Copy GraalVM Bundle from S3
        run: aws s3 cp "${{ inputs.bundle_s3_uri }}" ./bundle.nib
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CI_READER_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CI_READER_SECRET_KEY }}
      - name: Create version.txt
        run: echo "${{ inputs.version }}" >> version.txt

  build-and-push-image-ghcr:
    runs-on: ubuntu-24.04-arm
    needs: prepare
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.PUBLIC_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.PUBLIC_REGISTRY }}/${{ github.repository_owner }}/${{ inputs.project_name }}
          #TODO tag toggles
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable=true
            type=raw,value=testing,enable=true

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile-graalvm
          context: .
          platforms: linux/arm64
          push: true
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build-and-push-image-harbor-registry:
    runs-on: ubuntu-24.04-arm
    needs: build-and-push-image-ghcr
    permissions:
      contents: read
      packages: read

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64

      - name: Login to Harbor Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.PRIVATE_REGISTRY }}
          username: ${{ secrets.HARBOR_REGISTRY_USERNAME }}
          password: ${{ secrets.HARBOR_REGISTRY_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.PRIVATE_REGISTRY }}/${{ github.repository_owner }}/${{ inputs.project_name }}
          #TODO tag toggles
          tags: |
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=latest,enable=true

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile-graalvm
          context: .
          platforms: linux/arm64
          push: true
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
